<label for="categorias">Categor√≠a</label>
        <select name="categorias" >
            <% for( let i = 0; i < categories.length; i++ ) { %>
            
            <option value="<%= categories[i].id %> ">
                <%= categories[i].categories %> 
            </option>
            <% } %>
        </select>



rutas-json

//router.get('/agregarProducto', productController.add);
//router.post('/agregarProducto',upload.single("imagen"), productController.create);


controllers
crear:(req, res)=>{
        let promesaCuotas= Numbersofinstallments.findAll();
        let promesaSections= Sections.findAll();
        let promesaCategories=Categories.findAll();
        
        Promise
        .all([ promesaCuotas, promesaSections, promesaCategories])
        .then(([allNumbersofinstallments, allSections, allCategories])=> {
            return res.render('./products/productAdd', {allNumbersofinstallments, allSections, allCategories})
        })
        .catch(error => res.send(error))
    },
-------
,
    edit:(req, res)=> {
        let pedidoProducto=Products.findByPK(req.params.id);

        let promesaCuotas= Numbersofinstallments.findAll();
        let promesaSections= Sections.findAll();
        let promesaCategories= Categories.findAll();
        
        Promise.all([pedidoProducto, promesaCuotas, promesaSections, promesaCategories])
        .then(function([ producto, cuotas, secciones, categorias]) {
            console.log(cuotas);
            res.render('./products/productAdd', {producto:producto, cuotas:cuotas, secciones:secciones, categorias:categorias})})
        .catch(error => res.send(error))

    },
    update:(req, res)=> {
        Products.update({
            name:req.body.nombre,
            description:req.body.descripcion,
            duesId:req.body.cuotas,
            price:req.body.precio,
            img:req.file.filename,
            visibility:req.body.visualizacion,
            stock:req.body.stock,
            stockMin:req.body.stockMinimo,
            stockMax:req.body.stockMaximo,
            sectionId:req.body.seccion,
            categoryId:req.body.categoria,
        },{
            where:{
                id:req.params.id
            }
        })
        .then(()=>{
            res.redirect("/allproducts/" + req.params.id)
        })
        .catch(error => res.send(error))

    }
    --------
    
    /*add: (req,res)=>{
        res.render('./products/productAdd')
    },
    create:(req,res)=>{
        let producto={
            nombre:req.body.nombre,
            descripcion:req.body.descripcion,
            cuotas:"COMPRALO EN 12 CUOTAS DE $"+req.body.cuotas,
            precio:Number(req.body.precio),
            imagen:req.file.filename,
            categoria:req.body.categoria
        };
        product.create(producto);
        res.redirect("/");
    },*/

/*edit:(req, res)=> {
        let id=req.params.id;
        let producto=product.find(id);
        res.render('./products/editProduct',{producto})
    },
    editar:(req,res)=>{
        let img=product.find(req.params.id);
        let producto={
            id:req.params.id,
            nombre:req.body.nombre,
            descripcion:req.body.descripcion,
            cuotas:"COMPRALO EN 12 CUOTAS DE $"+req.body.cuotas,
            precio:Number(req.body.precio),
            imagen:req.file!=null?req.file.filename:img.imagen,
            categoria:req.body.categoria
        };
        product.update(producto);
        res.redirect("/allproducts")
    },*/
    /*alls:(req,res)=>{//listado para los admi

        let productos =product.all();
        res.render('./products/allproducts',{productos:productos,mil:toThousand})
    },
    todos:(req,res)=>{//listado para los clientes
        let productos =product.all();
        res.render('./products/todos',{productos:productos,mil:toThousand})
    },*/
    
    /*
    edit:(req, res)=> {
        let id=req.params.id;
        let producto=product.find(id);
        res.render('./products/editProduct',{producto})
    },
    editar:(req,res)=>{
        let img=product.find(req.params.id);
        let producto={
            id:req.params.id,
            nombre:req.body.nombre,
            descripcion:req.body.descripcion,
            cuotas:"COMPRALO EN 12 CUOTAS DE $"+req.body.cuotas,
            precio:Number(req.body.precio),
            imagen:req.file!=null?req.file.filename:img.imagen,
            categoria:req.body.categoria
        };
        product.update(producto);
        res.redirect("/allproducts")
    },*/
    /*
    detail:function (req,res) {
        let id=req.params.id;
        let producto=product.find(id);
        let productos =product.all();
        res.render('./products/productDetail',{producto,mil:toThousand,productos:productos})
    },*/
    /*delete:(req,res)=>{
        product.delete(req.params.id);
        res.redirect("/allproducts");
    }*/